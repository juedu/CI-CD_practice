name: CI/CD Pipeline

on:
  push:
    branches: [ dev, stg, prod ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: docker build -t ${{ secrets.ECR_REGISTRY }}/myapp:${{ github.sha }} .

    - name: Push Docker image to ECR
      run: |
        echo ${{ secrets.AWS_ACCESS_KEY_ID }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
        docker push ${{ secrets.ECR_REGISTRY }}/myapp:${{ github.sha }}

    # 아래의 단계들은 환경에 따라 ECS 서비스를 업데이트하는 방법을 보여줍니다.
    # 각 환경에 대한 조건부 로직을 사용하여 필요한 단계를 실행합니다.
    - name: Deploy to Dev
      if: github.ref == 'refs/heads/develop'
      run: # Dev 환경에 배포하는 AWS CLI 명령어를 여기에 추가합니다.

    - name: Deploy to Staging
      if: github.ref == 'refs/heads/staging'
      run: # Staging 환경에 배포하는 AWS CLI 명령어를 여기에 추가합니다.

    - name: Deploy to Prod
      if: github.ref == 'refs/heads/prod'
      run: # Prod 환경에 배포하는 AWS CLI 명령어를 여기에 추가합니다.
